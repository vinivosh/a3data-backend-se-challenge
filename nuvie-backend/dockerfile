################################################################################
# Build stage
################################################################################

FROM ghcr.io/astral-sh/uv:0.8.4-python3.12-alpine AS build

ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy

# This is necessary to use the system Python interpreter insted of a managed
# version
ENV UV_PYTHON_DOWNLOADS=0

WORKDIR /app
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --locked --no-install-project --no-dev
COPY . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked --no-dev

################################################################################
# Application stage (without uv)
################################################################################

FROM python:3.12-alpine

# Copy the application from the build
COPY --from=build --chown=app:app /app /app

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Run the FastAPI application
CMD ["fastapi", "dev", "--host", "0.0.0.0", "/app/src"]
