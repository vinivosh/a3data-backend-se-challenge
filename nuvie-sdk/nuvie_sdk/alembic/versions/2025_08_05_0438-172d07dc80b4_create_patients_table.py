"""Create Patients table.

Revision ID: 172d07dc80b4
Revises: d1f9b58feb66
Create Date: 2025-08-05 04:38:02.119814
"""

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "172d07dc80b4"
down_revision: str | Sequence[str] | None = "d1f9b58feb66"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("MALE", "FEMALE", "OTHER", name="gender").create(op.get_bind())
    sa.Enum("HISPANIC", "NONHISPANIC", name="ethnicity").create(op.get_bind())
    sa.Enum("WHITE", "BLACK", "ASIAN", name="race").create(op.get_bind())
    sa.Enum("MARRIED", "SINGLE", "NONE", name="maritalstatus").create(
        op.get_bind()
    )
    op.create_table(
        "patients",
        sa.Column("birthdate", sa.Date(), nullable=False),
        sa.Column("deathdate", sa.Date(), nullable=True),
        sa.Column(
            "ssn", sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False
        ),
        sa.Column(
            "drivers_license",
            sqlmodel.sql.sqltypes.AutoString(length=64),
            nullable=True,
        ),
        sa.Column(
            "passport",
            sqlmodel.sql.sqltypes.AutoString(length=16),
            nullable=True,
        ),
        sa.Column(
            "prefix",
            sqlmodel.sql.sqltypes.AutoString(length=16),
            nullable=True,
        ),
        sa.Column(
            "first",
            sqlmodel.sql.sqltypes.AutoString(length=128),
            nullable=False,
        ),
        sa.Column(
            "last",
            sqlmodel.sql.sqltypes.AutoString(length=128),
            nullable=False,
        ),
        sa.Column(
            "suffix",
            sqlmodel.sql.sqltypes.AutoString(length=16),
            nullable=True,
        ),
        sa.Column(
            "maiden",
            sqlmodel.sql.sqltypes.AutoString(length=128),
            nullable=True,
        ),
        sa.Column(
            "marital",
            postgresql.ENUM(
                "MARRIED",
                "SINGLE",
                "NONE",
                name="maritalstatus",
                create_type=False,
            ),
            nullable=True,
        ),
        sa.Column(
            "race",
            postgresql.ENUM(
                "WHITE", "BLACK", "ASIAN", name="race", create_type=False
            ),
            nullable=False,
        ),
        sa.Column(
            "ethnicity",
            postgresql.ENUM(
                "HISPANIC", "NONHISPANIC", name="ethnicity", create_type=False
            ),
            nullable=False,
        ),
        sa.Column(
            "gender",
            postgresql.ENUM(
                "MALE", "FEMALE", "OTHER", name="gender", create_type=False
            ),
            nullable=False,
        ),
        sa.Column(
            "birthplace",
            sqlmodel.sql.sqltypes.AutoString(length=128),
            nullable=False,
        ),
        sa.Column(
            "address",
            sqlmodel.sql.sqltypes.AutoString(length=256),
            nullable=False,
        ),
        sa.Column(
            "city", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False
        ),
        sa.Column(
            "state",
            sqlmodel.sql.sqltypes.AutoString(length=64),
            nullable=False,
        ),
        sa.Column(
            "county",
            sqlmodel.sql.sqltypes.AutoString(length=64),
            nullable=False,
        ),
        sa.Column(
            "zip", sqlmodel.sql.sqltypes.AutoString(length=16), nullable=True
        ),
        sa.Column("lat", sa.Numeric(precision=12, scale=4), nullable=False),
        sa.Column("lon", sa.Numeric(precision=12, scale=4), nullable=False),
        sa.Column(
            "healthcare_expenses",
            sa.Numeric(precision=12, scale=2),
            nullable=False,
        ),
        sa.Column(
            "healthcare_coverage",
            sa.Numeric(precision=12, scale=2),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("patients")
    sa.Enum("MARRIED", "SINGLE", "NONE", name="maritalstatus").drop(
        op.get_bind()
    )
    sa.Enum("WHITE", "BLACK", "ASIAN", name="race").drop(op.get_bind())
    sa.Enum("HISPANIC", "NONHISPANIC", name="ethnicity").drop(op.get_bind())
    sa.Enum("MALE", "FEMALE", "OTHER", name="gender").drop(op.get_bind())
    # ### end Alembic commands ###
