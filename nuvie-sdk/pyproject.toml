[project]
name = "nuvie-sdk"
version = "0.1.0"
description = "SDK for Nuvie's project. Contains data models and use cases for interecting with Nuvie's DB. To be used by any other project in the eco-system. Follows semantic versioning."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "sqlmodel>=0.0.24",
    "bcrypt>=4.3.0",
    "passlib[bcrypt]>=1.7.4",
    "pyjwt>=2.10.1",
    "python-dotenv>=1.1.1",
    "pydantic[email]>=2.11.7",
    "alembic[tz]>=1.16.4",
    "alembic-postgresql-enum>=1.8.0",
    "psycopg>=3.2.9",
]


[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "rich>=14.1.0",
    "ruff>=0.12.7",
]


[tool.ruff]
line-length = 79


[tool.ruff.lint]
# Adding rules to the enforced rule set.
extend-select = [
    "E501", # line-too-long
    "UP",  # pyupgrade
    "D",   # pydocstyle
]
extend-ignore = [
    "D202", # No blank lines allowed after function docstring,
    "D212", # Multi-line docstring summary should start at the first line
    "F403", # 'from module import *' used; unable to detect undefined names
]


[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.alembic]

# path to migration scripts.
# this is typically a path given in POSIX (e.g. forward slashes)
# format, relative to the token %(here)s which refers to the location of this
# ini file
script_location = "%(here)s/alembic"

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# Uncomment the line below if you want the files to be prepended with date and time
# see https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file
# for all available tokens
file_template = "%%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s"

# additional paths to be prepended to sys.path. defaults to the current working directory.
prepend_sys_path = [
    "."
]

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python>=3.9 or backports.zoneinfo library and tzdata library.
# Any required deps can installed by adding `alembic[tz]` to the pip requirements
# string value is passed to ZoneInfo()
# leave blank for localtime
# timezone =

# max length of characters to apply to the "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; This defaults
# to <script_location>/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path.
# version_locations = [
#    "%(here)s/alembic/versions",
#    "%(here)s/foo/bar"
# ]


# set to 'true' to search source files recursively
# in each "version_locations" directory
# new in Alembic version 1.10
# recursive_version_locations = false

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = "utf-8"

